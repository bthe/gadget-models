library(devtools)
install_github('mareframe/mfdb',ref='2.x')
?mfdb_import_survey_index
mfdb_import_cs_taxonomy
?mfdb_import_cs_taxonomy
?mfdb_import_cs_taxonomy
mfdb_import_sampling_type
mfdb_cs_taxonomy
mfdb:::mfdb_cs_taxonomy
ls(pos=2)
ls(pos=5)
ls(pos=6)
ls(pos=7)
ls(pos=4)
ls(pos=3)
ls(pos=1)
ls(pos=2)
ls(pos=8)
ls(pos=9)
names(landedcatch)
nrow(landedcatch)
tmp <- melt(landedcatch)
library(reshape2)
tmp <- melt(landedcatch)
nrow(tmp)
head(landedcatch)
names(lina)
head(lina)
table(line$ar)
table(lina$ar)
table(botnv$ar)
)
library(devtools)
install_local('~/Documents/mfdb/')
q()
n
q()
n
library(geo)
install.packages("geo", repos="http://R-Forge.R-project.org")
library(geo)
geoplot(rep00.1)
head(rep00.1)
geoplot(subset(rep00.1,sa > 0))
geoplot(subset(rep01.2,sa > 0))
geoplot(subset(rep01.1,sa > 0))
geoplot(rep01.1)
View(rep01.2)
View(rep01.1)
geoplot(cbind(rep01.1,rep01.2))
geoplot(rbind(rep01.1,rep01.2))
geoplot(subset(rbind(rep01.1,rep01.2),sa>0))
geoplot(subset(rbind(rep04.1,rep04.2,rep04.3),sa>0))
View(rep03.1)
summary(rep00.1)
library(mfdb)
library(fjolst)
library(Logbooks)
library(geo)
library(plyr)
library(data.table)
library(dplyr)
library(stringr)
tmp <- new.env()
load('capelin.RData',envir=tmp)
tmp$rep12.2[15] <- NULL
cap.dat <- ldply(tmp,function(x) x)
acoustic <-
cap.dat %>%
select(.id,lon,lat,sa,date) %>%
mutate(species = 'CAP',
areacell = d2sr(lat,lon),
date = as.Date(date,'%d.%m.%y'),
month = ifelse(is.na(month(date)),1,
month(date)),
year = ifelse(is.na(year(date)),
as.Date(str_extract(.id,'[0-9]+'),'%y'),
year(date)),
date = NULL,
count = sa,
sampling_type = 'ACU',
.id = NULL,
sa = NULL,
date = NULL)
View(acoustic)
r to change years
url <- 'http://data.hafro.is/assmt/2015/'
x1 <- gsub("<([[:alpha:]][[:alnum:]]*)(.[^>]*)>([.^<]*)", "\\3",
readLines(url))
x2<-gsub("</a>", "", x1)
sp.it <- sapply(strsplit(x2[grepl('/ ',x2)],'/'),function(x) str_trim(x[1]))[-1]
landingsByYear <-
ldply(sp.it, function(x){
print(x)
tmp <- tryCatch(read.csv(sprintf('%s%s/landings.csv',url,x)),
error=function(x) data.frame(Total=0))
tmp$species <- x
print(names(tmp))
return(tmp)
})
landingsByYear <-
ldply(sp.it, function(x){
tmp <- tryCatch(read.csv(sprintf('%s%s/landings.csv',url,x)),
error=function(x) data.frame(Total=0))
tmp$species <- x
return(tmp)
})
head(landingsByYear)
library(mfdb)
View(species
)
sp.it
subset(landingsByYear,species='shrimp')
head(subset(landingsByYear,species='shrimp'))
head(subset(landingsByYear,species=='shrimp'))
sp.it
spitToDST2 <-
read.table(text =
paste('species shortname',
'anglerfisn MON',
'b_ling BLI',
'b_whiting WHB',
'capelin CAP',
'cod COD',
'cucumber HTZ',
'dab DAB',
'g_halibut GLH',
'haddock HAD',
'halibut HAL',
'herring HER',
'l_sole LEM',
'ling LIN',
'lumpfish LUM',
'mackerel MAC',
'megrim MEG',
'nephrops NEP',
'plaice PLE',
'quahog QUA',
'r_dab DAB',
's_mentella REB',
's_norvegicus RED',
's_smelt GSS',
's_viviparus REV',
's_wolfish CAA',
'saithe POK',
'scallop CYS',
'tusk USK',
'urchin EEZ',
'whelk CSI',
'whiting WHG',
'witch WIT',
'wolffish CAA'),
header = TRUE)
landingsByYear <- join(landingsByYear,spitToDST2)
head(landingsByYear)
spitToDST2
landingsByYear <-
ldply(sp.it, function(x){
tmp <- tryCatch(read.csv(sprintf('%s%s/landings.csv',url,x)),
error=function(x) data.frame(Total=0))
tmp$species <- x
return(tmp)
})
spitToDST2 <-
read.table(text =
paste('species shortname',
'anglerfisn MON',
'b_ling BLI',
'b_whiting WHB',
'capelin CAP',
'cod COD',
'cucumber HTZ',
'dab DAB',
'g_halibut GLH',
'haddock HAD',
'halibut HAL',
'herring HER',
'l_sole LEM',
'ling LIN',
'lumpfish LUM',
'mackerel MAC',
'megrim MEG',
'nephrops NEP',
'plaice PLE',
'quahog QUA',
'r_dab DAB',
's_mentella REB',
's_norvegicus RED',
's_smelt GSS',
's_viviparus REV',
's_wolfish CAA',
'saithe POK',
'scallop CYS',
'tusk USK',
'urchin EEZ',
'whelk CSI',
'whiting WHG',
'witch WIT',
'wolffish CAA',
sep = '\n'),
header = TRUE)
landingsByYear <- join(landingsByYear,spitToDST2)
head(landingsByYear)
landingsByYear <-
ldply(sp.it, function(x){
tmp <- tryCatch(read.csv(sprintf('%s%s/landings.csv',url,x)),
error=function(x) data.frame(Total=0))
tmp$species <- x
return(tmp)
})
spitToDST2 <-
read.table(text =
paste('species shortname',
'anglerfish MON',
'b_ling BLI',
'b_whiting WHB',
'capelin CAP',
'cod COD',
'cucumber HTZ',
'dab DAB',
'g_halibut GLH',
'haddock HAD',
'halibut HAL',
'herring HER',
'l_sole LEM',
'ling LIN',
'lumpfish LUM',
'mackerel MAC',
'megrim MEG',
'nephrops NEP',
'plaice PLE',
'quahog QUA',
'r_dab DAB',
's_mentella REB',
's_norvegicus RED',
's_smelt GSS',
's_viviparus REV',
's_wolfish CAA',
'saithe POK',
'scallop CYS',
'tusk USK',
'urchin EEZ',
'whelk CSI',
'whiting WHG',
'witch WIT',
'wolffish CAA',
sep = '\n'),
header = TRUE)
landingsByYear <- join(landingsByYear,spitToDST2)
summary(landingsByYear)
landingsByYear <-
ldply(sp.it, function(x){
tmp <- tryCatch(read.csv(sprintf('%s%s/landings.csv',url,x)),
error=function(x) data.frame(Total=0))
tmp$species <- x
return(tmp)
})
spitToDST2 <-
read.table(text =
paste('species shortname',
'anglerfish MON',
'b_ling BLI',
'b_whiting WHB',
'capelin CAP',
'cod COD',
'cucumber HTZ',
'dab DAB',
'g_halibut GLH',
'haddock HAD',
'halibut HAL',
'herring HER',
'l_sole LEM',
'ling LIN',
'lumpfish LUM',
'mackerel MAC',
'megrim MEG',
'nephrops NEP',
'plaice PLE',
'quahog QUA',
'r_dab DAB',
's_mentella REB',
's_norvegicus RED',
's_smelt GSS',
's_viviparus REV',
's_wolfish CAA',
'saithe POK',
'scallop CYS',
'tusk USK',
'urchin EEZ',
'whelk CSI',
'whiting WHG',
'witch WIT',
'wolffish CAA',
sep = '\n'),
header = TRUE)
landingsByYear <- join(landingsByYear,spitToDST2) %>%
filter(!is.na(shortname)) %>%
select(shortname,Year,Others,Total)
View(landingsByYear)
head(acoustic)
head(landingsByYear)
table(landingsByYear$month)
warnings()
head(landingsByYear)
head(port.mapping)
min(landingsByYear$Year)
min(landingsByYear$Year,na.rm=TRUE)
head(landingsByYear)
head(filter(landingsByMonth,is.na(month)))
head(filter(landingsByMonth,is.na(month)))
mfdb_sample_count
landingsByYear %>% group_by(Year,shortname) %>% summarise(sY = min(Year))
landingsByYear %>% group_by(Year,species) %>% summarise(sY = min(Year))
landingsByYear %>% group_by(species) %>% summarise(sY = min(Year))
head(landingsByYear %>% group_by(species) %>% summarise(sY = min(Year)),30)
head(landingsByYear %>% group_by(species) %>% summarise(sY = min(Year,na.rm=TRUE)),30)
min(landedcatch$ar)$
))))))))))
min(landedcatch$ar)
head(oldLandingsByMonth)
load('capelin.RData')
install.packages('leaflet')
library(leaflet)
ls()
leaflet () %>% addTiles() %>% addPolylines(lng=rep01.1$lon,lat=rep01$lat) 
leaflet () %>% addTiles() %>% addPolylines(lng=rep01.1$lon,lat=rep01.1$lat) 
leaflet () %>% addTiles() %>% addPolylines(lng=rep01.1$lon,lat=rep01.1$lat)  %>% addPolylines(lng=rep02.1$lon,lat=rep02.1$lat,col='red')
leaflet(cap.dat) %>% addTiles() %>% addPolylines(lng=~lon,lat=~lat,group=~.id)
leaflet(cap.dat) %>% addTiles() %>% addPolylines(lng=~lon,lat=~lat,col=~.id)
leaflet(cap.dat) %>% addTiles() %>% addPolylines(lng=~lon,lat=~lat,col=~.id) + addRasterImage()
library(leaflet)
library(geo)
leaflet() %>%
  addTiles() %>%
  addPolylines(lng = ~lon, lat = ~lat, col="red", weight = 1, data = island)
?leaflet
?addTiles
library(fjolst)
head(fhopar)
head(ffiskar)
head(stations)
head(ffiskar)
 head(mapping)
 head(species.key)
summary(stations)
head(predators)
head(ffiskar)
subset(ffiskar,synis.id==38840)
class(predators)
head(fhopar)
devtools::install_github('tomasgreif/dplyrOracle')
head(fhopar)
p.names
names(p.names)
tmp <- data.table(fhopur) %>% setname(old="faeduhopur",new="FAEDUHOPUR")%>% left_join(p.names)
head(fhopur)
tmp <- data.table(fhopar) %>% setname(old="faeduhopur",new="FAEDUHOPUR")%>% left_join(p.names)รฐ
tmp <- data.table(fhopar) %>% setname(old="faeduhopur",new="FAEDUHOPUR")%>% left_join(p.names)
tmp <- data.table(fhopar) %>% setnames(old="faeduhopur",new="FAEDUHOPUR")%>% left_join(p.names)
tmp <- data.table(fhopar) %>% setnames(old="faeduhopur",new="FAEDUHOPUR")%>% left_join(p.names,copy=TRUE)
tmp <- fhopar %>% setnames(old="faeduhopur",new="FAEDUHOPUR")%>% left_join(p.names,copy=TRUE)
head(tmp
)
tmp <- fhopar %>% setnames(old="faeduhopur",new="FAEDUHOPUR")%>% left_join(p.names,copy=TRUE) %>% setnames(old=names(.), new = tolower(names(.)))
head(p.names)
class(p.name)
class(p.names)
head(p.names)
head(species)
nrow(p.names)
p.names
